version: 2
jobs:
  build:
    docker:
      - image: $REGISTRY_URL/circleci-base:latest
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: docker ecr login
          command: $(aws ecr get-login --no-include-email --region eu-central-1)
      - run:
          name: get cai's request bin
          command: |
            docker create --name request_container ${REGISTRY_URL}/request
            docker cp -a request_container:/request request
            docker rm request_container
      - run:
          name: build & push docker image
          command: |
            APP=${CIRCLE_PROJECT_REPONAME}
            TAG=${CIRCLE_SHA1:0:7}

            docker build -f ubuntu/Dockerfile -t ${REGISTRY_URL}/${APP}:${TAG} .
            docker push ${REGISTRY_URL}/${APP}:${TAG}
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag ${REGISTRY_URL}/${APP}:${TAG} ${REGISTRY_URL}/${APP}:latest
              docker push ${REGISTRY_URL}/${APP}:latest
            fi
      - run:
          name: build & push alpine docker image
          command: |
            APP=${CIRCLE_PROJECT_REPONAME}
            TAG=alpine-${CIRCLE_SHA1:0:7}

            docker build -f alpine/Dockerfile -t ${REGISTRY_URL}/${APP}:${TAG} .
            docker push ${REGISTRY_URL}/${APP}:${TAG}
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag ${REGISTRY_URL}/${APP}:${TAG} ${REGISTRY_URL}/${APP}:alpine-latest
              docker push ${REGISTRY_URL}/${APP}:alpine-latest
            fi
